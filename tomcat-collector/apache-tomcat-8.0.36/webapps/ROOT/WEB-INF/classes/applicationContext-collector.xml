<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:beans="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:hdp="http://www.springframework.org/schema/hadoop"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd">

    <context:annotation-config/>

    <context:component-scan
            base-package="com.navercorp.pinpoint.collector.dao.hbase,
                        com.navercorp.pinpoint.collector.handler,
                        com.navercorp.pinpoint.collector.manage,
                        com.navercorp.pinpoint.collector.mapper,
                        com.navercorp.pinpoint.collector.util,
                        com.navercorp.pinpoint.collector.config" />

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:hbase.properties</value>
                <value>classpath:pinpoint-collector.properties</value>
            </list>
        </property>

    </bean>

    <util:properties id="pinpoint_collector_properties" location="classpath:pinpoint-collector.properties" />

    <bean id="collectorConfiguration" class="com.navercorp.pinpoint.collector.config.CollectorConfiguration">
        <property name="properties" ref="pinpoint_collector_properties"/>
    </bean>

    <import resource="classpath:applicationContext-hbase.xml"/>

    <bean id="daoAutoFlusher" class="com.navercorp.pinpoint.collector.dao.AutoFlusher" init-method="initialize" destroy-method="shutdown">
    	<beans:property name="cachedStatisticsDaoList">
    		<beans:list>
    			<beans:ref bean="hbaseMapStatisticsCallerDao"/>
    			<beans:ref bean="hbaseMapStatisticsCalleeDao"/>
                <beans:ref bean="hbaseMapResponseTimeDao"/>
    		</beans:list>
    	</beans:property>
        <property name="flushPeriod" value="${statistics.flushPeriod}"/>
    </bean>
    
    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry">
    </bean>

    <bean id="collectorMetric" class="com.navercorp.pinpoint.collector.monitor.CollectorMetric">
    </bean>

	<!-- Manager-related Beans -->    
    <bean id="jmxCollectorManager" class="com.navercorp.pinpoint.collector.manage.jmx.JMXCollectorManager">
    </bean>

    <bean id="jmxCollectorManagerList" class="com.navercorp.pinpoint.collector.manage.jmx.JMXCollectorManagerList">
    </bean>
	
    <bean id="handlerManager" class="com.navercorp.pinpoint.collector.manage.HandlerManager">
    </bean>

    <bean id="clusterManager" class="com.navercorp.pinpoint.collector.manage.ClusterManager">
        <constructor-arg ref="collectorConfiguration"/>
        <constructor-arg ref="targetClusterPointRepository"/>
    </bean>

    <!-- DispatchHandler-related Beans -->
    <bean id="tcpDispatchHandler" class="com.navercorp.pinpoint.collector.receiver.TcpDispatchHandler"/>
    <bean id="tcpDispatchHandlerWrapper" class="com.navercorp.pinpoint.collector.receiver.DispatchHandlerWrapper">
    	<constructor-arg ref="tcpDispatchHandler"/>
    </bean>
    
    <bean id="udpDispatchHandler" class="com.navercorp.pinpoint.collector.receiver.UdpDispatchHandler"/>
    <bean id="udpDispatchHandlerWrapper" class="com.navercorp.pinpoint.collector.receiver.DispatchHandlerWrapper">
    	<constructor-arg ref="udpDispatchHandler"/>
    </bean>

    <bean id="udpSpanDispatchHandler" class="com.navercorp.pinpoint.collector.receiver.UdpSpanDispatchHandler"/>
    <bean id="udpSpanDispatchHandlerWrapper" class="com.navercorp.pinpoint.collector.receiver.DispatchHandlerWrapper">
    	<constructor-arg ref="udpSpanDispatchHandler"/>
    </bean>

    <!-- Serializer Factory Beans -->
    <bean id="commandHeaderTBaseSerializerFactory" class="com.navercorp.pinpoint.thrift.io.CommandHeaderTBaseSerializerFactory">
        <constructor-arg value="#{T(com.navercorp.pinpoint.common.Version).VERSION}" />
    </bean>

    <bean id="commandHeaderTBaseDeserializerFactory" class="com.navercorp.pinpoint.thrift.io.CommandHeaderTBaseDeserializerFactory">
        <constructor-arg value="#{T(com.navercorp.pinpoint.common.Version).VERSION}" />
    </bean>

    <!-- Agent Event/Lifecycle related Beans -->
    <bean id="agentEventWorker" class="com.navercorp.pinpoint.common.util.ExecutorFactory" factory-method="newFixedThreadPool">
        <constructor-arg index="0" value="#{collectorConfiguration.agentEventWorkerThreadSize}"/>
        <constructor-arg index="1" value="#{collectorConfiguration.agentEventWorkerQueueSize}"/>
        <constructor-arg index="2" value="Pinpoint-AgentEvent-Worker"/>
        <constructor-arg index="3" value="true"/>
    </bean>
    
    <bean id="agentEventMessageSerializer" class="com.navercorp.pinpoint.common.util.AgentEventMessageSerializer">
        <constructor-arg ref="commandHeaderTBaseSerializerFactory"/>
    </bean>

    <bean id="agentEventHandler" class="com.navercorp.pinpoint.collector.rpc.handler.AgentEventHandler"/>
    <bean id="agentLifeCycleHandler" class="com.navercorp.pinpoint.collector.rpc.handler.AgentLifeCycleHandler"/>
    <bean id="agentLifeCycleChangeEventHandler" class="com.navercorp.pinpoint.collector.rpc.handler.AgentLifeCycleChangeEventHandler"/>

    <!-- Route Filters -->
    <bean id="loggingRouteFilter" class="com.navercorp.pinpoint.collector.cluster.route.filter.LoggingFilter"/>
    <bean id="agentEventHandlingFilter" class="com.navercorp.pinpoint.collector.cluster.route.filter.AgentEventHandlingFilter"/>

    <!-- Filter Chains -->
    <bean id="requestFilterChain" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteFilterChain">
        <constructor-arg>
            <list value-type="com.navercorp.pinpoint.collector.cluster.route.filter.RouteFilter">
                <ref bean="loggingRouteFilter"/>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="responseFilterChain" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteFilterChain">
        <constructor-arg>
            <list value-type="com.navercorp.pinpoint.collector.cluster.route.filter.RouteFilter">
                <ref bean="loggingRouteFilter"/>
                <ref bean="agentEventHandlingFilter"/>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="streamCreateFilterChain" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteFilterChain">
        <constructor-arg>
            <list value-type="com.navercorp.pinpoint.collector.cluster.route.filter.RouteFilter">
                <ref bean="loggingRouteFilter"/>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="streamResponseFilterChain" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteFilterChain">
        <constructor-arg>
            <list value-type="com.navercorp.pinpoint.collector.cluster.route.filter.RouteFilter">
                <ref bean="loggingRouteFilter"/>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="streamCloseFilterChain" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteFilterChain">
        <constructor-arg>
            <list value-type="com.navercorp.pinpoint.collector.cluster.route.filter.RouteFilter">
            </list>
        </constructor-arg>
    </bean>
    
    <!-- Cluster-related Beans -->
    <bean id="targetClusterPointRepository" class="com.navercorp.pinpoint.collector.cluster.ClusterPointRepository"/>
    
    <bean id="defaultRouteHandler" class="com.navercorp.pinpoint.collector.cluster.route.DefaultRouteHandler">
        <constructor-arg index="0" type="com.navercorp.pinpoint.collector.cluster.ClusterPointLocator" ref="targetClusterPointRepository"/>
        <constructor-arg index="1" type="com.navercorp.pinpoint.collector.cluster.route.RouteFilterChain" ref="requestFilterChain"/>
        <constructor-arg index="2" type="com.navercorp.pinpoint.collector.cluster.route.RouteFilterChain" ref="responseFilterChain"/>
    </bean>
    
    <bean id="streamRouteHandler" class="com.navercorp.pinpoint.collector.cluster.route.StreamRouteHandler">
        <constructor-arg index="0" type="com.navercorp.pinpoint.collector.cluster.ClusterPointLocator" ref="targetClusterPointRepository"/>
        <constructor-arg index="1" type="com.navercorp.pinpoint.collector.cluster.route.RouteFilterChain" ref="streamCreateFilterChain"/>
        <constructor-arg index="2" type="com.navercorp.pinpoint.collector.cluster.route.RouteFilterChain" ref="streamResponseFilterChain"/>
        <constructor-arg index="3" type="com.navercorp.pinpoint.collector.cluster.route.RouteFilterChain" ref="streamCloseFilterChain"/>
    </bean>

    <bean id="clusterPointRouter" class="com.navercorp.pinpoint.collector.cluster.ClusterPointRouter">
        <constructor-arg ref="targetClusterPointRepository"/>
        <constructor-arg ref="defaultRouteHandler"/>
        <constructor-arg ref="streamRouteHandler"/>
    </bean>

    <bean id="clusterService" class="com.navercorp.pinpoint.collector.cluster.zookeeper.ZookeeperClusterService">
        <constructor-arg ref="collectorConfiguration"/>
        <constructor-arg ref="clusterPointRouter"/>
    </bean>

    <!-- TCPReceiver related Beans -->
    <bean id="serverAcceptor" class="com.navercorp.pinpoint.rpc.server.PinpointServerAcceptor"/>

    <util:list id="channelStateChangeEventHandlers" value-type="com.navercorp.pinpoint.rpc.server.handler.ServerStateChangeEventHandler">
        <ref bean="agentLifeCycleChangeEventHandler"/> 
    </util:list>

    <bean id="tcpReceiver" class="com.navercorp.pinpoint.collector.receiver.tcp.TCPReceiver">
        <constructor-arg type="com.navercorp.pinpoint.collector.config.CollectorConfiguration" ref="collectorConfiguration"/>
        <constructor-arg type="com.navercorp.pinpoint.collector.receiver.DispatchHandler" ref="tcpDispatchHandlerWrapper"/>
        <constructor-arg type="com.navercorp.pinpoint.rpc.server.PinpointServerAcceptor" ref="serverAcceptor"/>
        <constructor-arg type="com.navercorp.pinpoint.collector.cluster.zookeeper.ZookeeperClusterService" ref="clusterService"/>
    </bean>

    <!-- UDPSpanReceiver related Beans -->
    <bean id="udpSpanBasePacketHandler" class="com.navercorp.pinpoint.collector.receiver.udp.BaseUDPHandlerFactory">
        <constructor-arg index="0" ref="udpSpanDispatchHandlerWrapper"/>
        <constructor-arg index="1" ref="tBaseFilterChain"/>
        <constructor-arg index="2" value="#{collectorConfiguration.l4IpList}"/>
    </bean>

    <bean id="tBaseFilterChain" class="com.navercorp.pinpoint.collector.receiver.udp.TBaseFilterChain">
        <constructor-arg>
            <list>
                <ref bean="networkAvailabilityCheckPacketFilter"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="networkAvailabilityCheckPacketFilter" class="com.navercorp.pinpoint.collector.receiver.udp.NetworkAvailabilityCheckPacketFilter"/>


    <bean id="udpSpanReceiver" class="com.navercorp.pinpoint.collector.receiver.udp.UDPReceiver">
        <constructor-arg index="0" value="Pinpoint-UDP-Span"/>
        <constructor-arg index="1" ref="udpSpanBasePacketHandler"/>
        <constructor-arg index="2" value="#{collectorConfiguration.udpSpanListenIp}"/>
        <constructor-arg index="3" value="#{collectorConfiguration.udpSpanListenPort}"/>
        <constructor-arg index="4" value="#{collectorConfiguration.udpSpanSocketReceiveBufferSize}"/>
        <constructor-arg index="5" value="#{collectorConfiguration.udpSpanWorkerThread}"/>
        <constructor-arg index="6" value="#{collectorConfiguration.udpSpanWorkerQueueSize}"/>
        <constructor-arg index="7" value="#{collectorMetric.enable}"/>

    </bean>

    <!-- UDPStatReceiver related Beans -->
    <bean id="udpStatBasePacketHandler" class="com.navercorp.pinpoint.collector.receiver.udp.BaseUDPHandlerFactory">
        <constructor-arg index="0" ref="udpDispatchHandlerWrapper"/>
        <constructor-arg index="1" ref="tBaseFilterChain"/>
        <constructor-arg index="2" value="#{collectorConfiguration.l4IpList}"/>
    </bean>

    <bean id="udpStatReceiver" class="com.navercorp.pinpoint.collector.receiver.udp.UDPReceiver">
        <constructor-arg index="0" value="Pinpoint-UDP-Stat"/>
        <constructor-arg index="1"  ref="udpStatBasePacketHandler"/>
        <constructor-arg index="2" value="#{collectorConfiguration.udpStatListenIp}"/>
        <constructor-arg index="3" value="#{collectorConfiguration.udpStatListenPort}"/>
        <constructor-arg index="4" value="#{collectorConfiguration.udpStatSocketReceiveBufferSize}"/>
        <constructor-arg index="5" value="#{collectorConfiguration.udpStatWorkerThread}"/>
        <constructor-arg index="6" value="#{collectorConfiguration.udpStatWorkerQueueSize}"/>
        <constructor-arg index="7" value="#{collectorMetric.enable}"/>
    </bean>
    
    <bean id="jsonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper">
    </bean>

    <bean id="hTable" class="com.navercorp.pinpoint.common.hbase.HBaseTables">
    </bean>

    <bean id="callerMerge" class="com.navercorp.pinpoint.collector.dao.hbase.statistics.RowKeyMerge">
        <constructor-arg value="#{hTable.MAP_STATISTICS_CALLEE_VER2_CF_COUNTER}"/>
    </bean>

    <bean id="calleeMerge" class="com.navercorp.pinpoint.collector.dao.hbase.statistics.RowKeyMerge">
        <constructor-arg value="#{hTable.MAP_STATISTICS_CALLER_VER2_CF_COUNTER}"/>
    </bean>

    <bean id="selfMerge" class="com.navercorp.pinpoint.collector.dao.hbase.statistics.RowKeyMerge">
        <constructor-arg value="#{hTable.MAP_STATISTICS_SELF_VER2_CF_COUNTER}"/>
    </bean>

    <bean id="timeSlot" class="com.navercorp.pinpoint.common.util.DefaultTimeSlot">
    </bean>


    <bean id="typeLoaderService" class="com.navercorp.pinpoint.common.service.DefaultTraceMetadataLoaderService"/>
    <bean id="serviceTypeRegistryService" class="com.navercorp.pinpoint.common.service.DefaultServiceTypeRegistryService">
        <constructor-arg ref="typeLoaderService"/>
    </bean>
    
    <bean id="sqlMetaDataHandler" class="com.navercorp.pinpoint.collector.handler.SqlMetaDataHandler">
        <property name="sqlMetaDataDao" ref="hbaseSqlMetaDataDao"/>
    </bean>
    
    <bean id="hbaseSqlMetaDataDao" class="com.navercorp.pinpoint.collector.dao.hbase.HbaseSqlMetaDataDao"/>

    <bean id="sequenceSpanEventFilter" class="com.navercorp.pinpoint.collector.dao.hbase.filter.SequenceSpanEventFilter">
        <constructor-arg index="0" value="${collector.spanEvent.sequence.limit:10000}"/>
    </bean>
</beans>